name: Android Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

# ref https://docs.github.com/zh/actions/learn-github-actions/variables
env:
  repo_name_android: "siyuan-android"
  repo_name: "siyuan"
  repo_owner: "siyuan-community"
  repo_name_upstream: "siyuan"
  repo_owner_upstream: "siyuan-note"
  package_json: "app/package.json"

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.release_info.outputs.release_version }}
      version: ${{ steps.version.outputs.value }}
      packageManager: ${{ steps.packageManager.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install PyGithub

      - id: thisLatestRelease
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: ${{ env.repo_owner }}
          repo: ${{ env.repo_name }}
          # repository: ${{ github.repository }}
          # token: ${{ secrets.GITHUB_TOKEN }}
          excludes: prerelease, draft

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: "jq .version ${{ env.package_json }} -r"

      - name: Extract electronVersion from package.json
        uses: sergeysova/jq-action@v2
        id: electronVersion
        with:
          cmd: "jq .devDependencies.electron ${{ env.package_json }} -r"

      - name: Extract packageManager from package.json
        uses: sergeysova/jq-action@v2
        id: packageManager
        with:
          cmd: "jq .packageManager ${{ env.package_json }} -r"

      - name: Gather Release Information
        id: release_info
        run: |
          echo "release_title=$(git show --format=%s --no-patch | head -1)" >> $GITHUB_OUTPUT
          echo "release_version=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          changelog_header=$(python scripts/parse-changelog-HEAD.py -t ${{ github.ref }} -b ${{ steps.thisLatestRelease.outputs.release }} -e ${{ steps.electronVersion.outputs.value }} ${{ env.repo_owner }}/${{ env.repo_name }})
          changelog=$(python scripts/parse-changelog.py -t ${{ github.ref }} ${{ env.repo_owner_upstream }}/${{ env.repo_name_upstream }})
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "release_body<<$EOF" >> $GITHUB_ENV
          echo "$changelog_header" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.release_info.outputs.release_version }}
          tag: ${{ github.ref }}
          body: ${{ env.release_body }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}
    needs: create_release
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            name: ubuntu build Android.apk
            kernel_path: "kernel.aar"
            build_args_prefix: "-s -w"
            goos: "android"
            goarch: "amd64"
            suffix: "Android.apk"

    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel/go.mod
      - run: go version

      - name: Set up gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20      

      - name: Install Node pnpm
        run: npm install -g ${{ needs.create_release.outputs.packageManager }}
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Install Node Dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Building UI
        run: pnpm run build
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Pack UI Files
        run: zip -q -r app.zip appearance/ guide/ stage/ changelogs/
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app

      - name: Building Kernel
        run: gomobile bind --tags fts5 -ldflags "${{ matrix.config.build_args_prefix }}" -o "${{ matrix.config.kernel_path }}" -androidapi 24 ./mobile/
        working-directory: ${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel
        env:
          GO111MODULE: on
          CGO_ENABLED: 1
          GOOS: ${{ matrix.config.goos }}
          GOPATH: ${{ github.workspace }}/go
          GOARCH: ${{ matrix.config.goarch }}
      
      - name: Checkout Android repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.repo_owner_upstream }}/${{ env.repo_name_android }}
          ref: ${{ github.ref }}
          path: ${{ env.repo_name_android }}

      - name: Copy UI File
        run: mkdir -p "${{ github.workspace }}/${{ env.repo_name_android }}/app/src/main/assets/" && cp "${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/app/app.zip" "${{ github.workspace }}/${{ env.repo_name_android }}/app/src/main/assets/"
      
      - name: Copy Kernel File
        run: mkdir -p "${{ github.workspace }}/${{ env.repo_name_android }}/app/libs/" && cp "${{ github.workspace }}/go/src/github.com/${{ env.repo_owner }}/${{ env.repo_name }}/kernel/${{ matrix.config.kernel_path }}" "${{ github.workspace }}/${{ env.repo_name_android }}/app/libs/"

      - name: Decode Keystore
        run: echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks
        working-directory: ${{ github.workspace }}/${{ env.repo_name_android }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew
        working-directory: ${{ github.workspace }}/${{ env.repo_name_android }}
      
      - name: Create signing config
        run: echo -e "android{signingConfigs{siyuanConfig{storeFile file(\"../keystore.jks\")\nstorePassword System.getenv(\"SIGNING_STORE_PASSWORD\")\nkeyPassword System.getenv(\"SIGNING_KEY_PASSWORD\")\nkeyAlias System.getenv(\"SIGNING_KEY_ALIAS\")}}}" > signings.gradle
        working-directory: ${{ github.workspace }}/${{ env.repo_name_android }}

      - name: Build APKs
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleOfficialRelease
        working-directory: ${{ github.workspace }}/${{ env.repo_name_android }}

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: siyuan-CE-${{ needs.create_release.outputs.release_version }}-${{ matrix.config.suffix }}
          asset_path: ${{ github.workspace }}/${{ env.repo_name_android }}/app/build/outputs/apk/official/release/siyuan-${{ needs.create_release.outputs.version }}-official-release.apk
          asset_content_type: application/octet-stream
